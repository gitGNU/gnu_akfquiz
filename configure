#! /bin/sh

# $Id: configure,v 1.7 2006/08/20 08:20:25 akf Exp $
#
# This file is part of AKFQuiz
#
# AKFQuiz is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.
#
# AKFQuiz is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA

#####################################################################
# configure here:

PREFIX=/usr/local
CGIPATH=/usr/lib/cgi-bin

# for modified versions use a variant-name please
#VARIANT=""
VARIANT="-testing"
NAME="AKFQuiz"

MAINVERSION=4
SUBVERSION=3
REVISION=2

VERSION=$MAINVERSION.$SUBVERSION.$REVISION
SVERSION=$MAINVERSION$SUBVERSION$REVISION

SRCDIR="."

# either a E-Mail address, or empty
BUGMAIL=bug-akfquiz@akfoerster.de

#####################################################################
# functions

help() {
cat <<AMEN
./configure [options]

options:
  -h | --help
  --srcdir=
  --prefix=
  --cgipath=
  --variant=
  --arch=
  --sys=
  --with-gpc
  --with-fpc
  --with-xw32
  --with-xarm
AMEN
exit
}

warn() {
  echo "$@" 1>&2
  }

error() {
  echo "error: $@" 1>&2
  exit 1
  }
  
getcompiler() {
  # search for available compiler
  echo "checking for fpc or gpc..."
  if which fpc
  then COMPILER=fpc
  elif which gpc
  then COMPILER=gpc
  else error "neither gpc nor fpc found"
  fi
  }

create_rc() {
  sed < "srcbin/w32/rc.in" > "srcbin/w32/$1.rc" \
    -e "s/^\(FILEVERSION\).*/\1 $MAINVERSION, $SUBVERSION, $REVISION, 0/" \
    -e "s/^\(PRODUCTVERSION\).*/\1 $MAINVERSION, $SUBVERSION, $REVISION, 0/" \
    -e "s/\(.*VALUE \"FileDescription\", *\)\".*\"/\1\"$2\"/" \
    -e "s/\(.*VALUE \"FileVersion\", *\)\".*\"/\1\"$VERSION$VARIANT\"/" \
    -e "s/\(.*VALUE \"InternalName\", *\)\".*\"/\1\"$1\"/" \
    -e "s/\(.*VALUE \"OriginalFilename\", *\)\".*\"/\1\"$1.exe\"/" \
    -e "s/\(.*VALUE \"Comments\", *\)\".*\"/\1\"$3\"/" \
    -e "s/\(.*VALUE \"ProductName\", *\)\".*\"/\1\"$NAME$VARIANT\"/" \
    -e "s/\(.*VALUE \"ProductVersion\", *\)\".*\"/\1\"$VERSION\"/"
    }

notsupported() {
  warn "not supported: $1"
  }

#####################################################################
# main program:

SYS=`uname -s`
ARCH=`uname -m`
# rename architecture
case "$ARCH" in
   i?86) ARCH=x86 ;;
esac

# check parameter
while [ $# -gt 0 ] 
do
  case "$1" in
    -h | --help)   help ;;
    --target=gpc | --target=fpc | --target=xw32 | --target=xarm)
                   error "old usage for --target no longer supported!" ;;
    --srcdir=*)    SRCDIR=`echo "$1" | sed -e "s/--srcdir=\(.*\)/\1/"` ;;
    --build=*)     notsupported --build ;; # yet to be implemented
    --host=*)      notsupported --host ;;  # yet to be implemented
    --target=*)    notsupported --target ;; # yet to be implemented
    --with-gpc)    COMPILER=gpc ;;
    --with-fpc)    COMPILER=fpc ;;
    --with-xw32)   COMPILER=xw32 ;;
    --with-xarm)   COMPILER=xarm ;;
    --with-*)      ;; # ignore (see GNU Coding Standards)
    --gpc)         COMPILER=gpc ;;
    --fpc)         COMPILER=fpc ;;
    --xw32)        COMPILER=xw32 ;;
    --xarm)        COMPILER=xarm ;;
    --enable-*)    ;; # ignore (see GNU Coding Standards)
    --prefix=*)    PREFIX=`echo "$1" | sed -e "s/--prefix=\(.*\)/\1/"` ;;
    --cgipath=*)   CGIPATH=`echo "$1" | sed -e "s/--cgipath=\(.*\)/\1/"` ;;
    --variant=*)   VARIANT=-`echo "$1" | sed -e "s/--variant=\(.*\)/\1/"` ;;
    --arch=*)      ARCH=`echo "$1" | sed -e "s/--arch=\(.*\)/\1/"` ;;
    --sys=*)       SYS=`echo "$1" | sed -e "s/--sys=\(.*\)/\1/"` ;;
    -*) error "unknown parameter $1" ;;
    *) ;; # ignore for now
  esac
  shift
done

test -z "$COMPILER" && getcompiler

test "$COMPILER" = "xarm" && ARCH=arm
test "$COMPILER" = "xw32" && SYS=w32

# check for needed tools
case $COMPILER in
  fpc|xarm|xw32) 
       echo "checking for bin2obj... "
       which bin2obj || error "fpc-utils needed" ;;
  gpc) echo "checking for binobj... "
       which binobj || error "binobj not found - should come with gpc" ;;
esac

VERSION=$MAINVERSION.$SUBVERSION.$REVISION
SVERSION=$MAINVERSION$SUBVERSION$REVISION

# show settings:
cat << AMEN
SRCDIR:   $SRCDIR (relative to srcbin/)
PREFIX:   $PREFIX
CGIPATH:  $CGIPATH
NAME:     $NAME
VARIANT:  $VARIANT
VERSION:  $VERSION
SVERSION: $SVERSION
COMPILER: $COMPILER
SYS:      $SYS
ARCH:     $ARCH
BUGMAIL:  $BUGMAIL
AMEN

# change to default directory
cd $(dirname $0)

sed < Makefile.in > Makefile \
    -e "s/ARCH=.*/ARCH=$ARCH/" \
    -e "s/SYS=.*/SYS=$SYS/" \
    -e "s/^\(VERSION *= *\).*/\1$VERSION/"

cp srcbin/Makefile.$COMPILER srcbin/Makefile

sed < srcbin/common.in > srcbin/common.mak \
    -e "s%^\(srcdir *= *\).*%\1$SRCDIR%" \
    -e "s%^\(prefix *= *\).*%\1$PREFIX%" \
    -e "s%^\(cgidir *= *\).*%\1$CGIPATH%" \
    -e "s/^\(SVERSION *= *\).*/\1$SVERSION/"

cat > srcbin/config.inc <<AMEN
{ this file was generated automatically using configure
  do not edit this by hand }

const AKFQuizName = '$NAME$VARIANT';
const AKFQuizVersion = '$VERSION';
const BugMail = '$BUGMAIL';

AMEN

if [ -w ../autopackage/default.apspec ]
then
  mv ../autopackage/default.apspec ../autopackage/default.apspec.old
  sed < ../autopackage/default.apspec.old > ../autopackage/default.apspec \
      -e "s/^\(SoftwareVersion: *\).*/\1$VERSION/"
fi

# Windows stuff

mv srcbin/w32/akfquiz.iss srcbin/w32/akfquiz.iss.old
sed < srcbin/w32/akfquiz.iss.old > srcbin/w32/akfquiz.iss \
    -e "s/^\(AppName=\).*/\1$NAME$VARIANT/" \
    -e "s/^\(AppVerName=\).*/\1$NAME$VARIANT $VERSION/" \
    -e "s/^\(OutputBaseFileName=\).*/\1akfquiz$VARIANT-${VERSION}-w32/" \
    -e "s/^\(VersionInfoVersion=\).*/\1$VERSION/"

create_rc scrquiz "scrquiz: AKFQuiz in text-mode" "ported from GNU\/Linux"
create_rc mkquiz "mkquiz: make HTML quiz-file for JavaScript" \
          "ported from GNU\/Linux"
create_rc cgiquiz "cgiquiz: CGI program for AKFQuiz" "ported from GNU\/Linux"
create_rc linequiz "linequiz: AKFQuiz line oriented" "ported from GNU\/Linux"
create_rc grquiz "grquiz: AKFQuiz in graphic-mode" "ported from GNU\/Linux"
create_rc wquizchooser "AKFQuiz quizchooser" \
          "use gtkquizchooser for GTK+ environments"

